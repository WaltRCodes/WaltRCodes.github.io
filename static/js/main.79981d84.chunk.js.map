{"version":3,"sources":["components/LeaveReview.js","components/Movie.js","components/Navbar.js","components/Search.js","components/SignIn.js","components/SignUp.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["LeaveReview","props","state","isFillingOutForm","rating","description","desc","occured","handleClick","bind","submitForm","takeRating","takeDescription","this","document","getElementById","value","setState","event","parseFloat","target","prevState","object","axios","post","response","console","log","data","preventDefault","review","reviewId","Date","toUTCString","userId","movieId","postApi","onSubmit","type","onChange","id","placeholder","onClick","bttonText","Component","Movie","searchTerm","movieHTML","reviewHTML","users","purchase","get","process","response2","response3","movie","reviews","filter","className","src","poster_path","title","release_date","runtime","genres","map","genre","name","href","homepage","overview","production_companies","company","production_countries","country","balance","postDatabase","user","email","password","address","filling","reviewsHTML","date","deleteApi","style","display","callApi","term","delete","Navbar","to","Search","resultsHTML","movies","makeSearch","takeTerm","elements","results","capture","background","SignIn","signInHandler","arrayIndex","accounts","findIndex","Allowed","error","onChangeHandler","SignUpPage","createUserHandler","message","Profile","userName","userPassword","userEmail","userAddress","userBalance","switchEdit","image","App","signedIn","signingIn","chooseMovie","movieID","exact","strict","path","render","alt","width","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.79981d84.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nexport default class LeaveReview extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isFillingOutForm: false,\n          rating:this.props.rating,\n          description:this.props.desc,\n          occured:false\n\n        }\n        {/*binds the function to the class*/}\n        this.handleClick = this.handleClick.bind(this);\n        //put this:event.preventDefault(); in the new form submitting function\n        this.submitForm = this.submitForm.bind(this);\n        this.takeRating = this.takeRating.bind(this);\n        this.takeDescription = this.takeDescription.bind(this);\n  }\n  componentDidUpdate(){\n    //console.log(document.getElementById('rating').value,document.getElementById('description').value);\n    if(this.state.isFillingOutForm&&!this.state.occured){\n        document.getElementById('rating').value=this.props.rating;\n        document.getElementById('desc').value=this.props.desc;\n        this.setState({occured:true});\n    }\n    \n  }\n\n  takeRating(event){\n    {/* update the ymbol in state */}\n    this.setState({rating: parseFloat(event.target.value)});\n  }\n\n  takeDescription(event){\n    this.setState({description: event.target.value});\n  }\n\n  handleClick() {\n    {/*acts a trigger between form and button*/}\n    this.setState(prevState => ({\n        isFillingOutForm: !prevState.isFillingOutForm\n    }));\n    \n  }\n  async postApi(object) {\n    try {\n      //const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/ingredients',object);\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/reviews',object);\n      console.log(response.data);\n      console.log(response);\n      \n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  submitForm(event){\n    event.preventDefault();\n    {/*submit form and creates comment*/}\n    let review = {\n        \"id\": this.props.reviewId,\n        \"description\": this.state.description,\n        \"date\": new Date().toUTCString(),\n        \"rating\": this.state.rating,\n        \"userId\": this.props.userId,\n        \"movieId\": this.props.movieId\n    };\n    this.postApi(review);\n    this.setState(prevState => ({\n        isFillingOutForm: !prevState.isFillingOutForm\n    }));\n  }\n  \n  render() {\n    return (\n        this.state.isFillingOutForm ?\n        <div>\n            <form onSubmit={this.submitForm}>\n                <label>\n                    Rating:\n                    <input type=\"number\" onChange={this.takeRating} id=\"rating\" placeholder=\"0.0\"/>\n                    <br />\n                </label>\n                <label>\n                    Comment:\n                    <input type=\"text\" onChange={this.takeDescription} id=\"desc\" placeholder=\"Comment\"/>\n                    <br />\n                </label>\n                <label>\n                    <input type=\"submit\" value=\"Submit\"/>\n                </label>\n                \n            </form>\n        </div>\n      :\n        <div>\n            <button onClick={this.handleClick}>{this.props.bttonText}</button>\n        </div>\n      \n    )\n  }\n}","import React, { Component } from 'react'\nimport axios from 'axios';\nimport LeaveReview from './LeaveReview';\nexport default class Movie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: \"\",\n      movieHTML:'',\n      reviewHTML:'',\n      users:[],\n      purchase:''\n         \n    }\n   \n  }\n  async callApi() {\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/movie/${this.props.id}?api_key=${process.env.REACT_APP_KEY}&language=en-US`);\n      const response2 = await axios.get(`https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/reviews`);\n      const response3 = await axios.get(`https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/accounts`);\n      \n      \n    let movie = response.data;\n    let users = response3.data;\n    let reviews = response2.data.filter(review => review.movieId === movie.id);\n\n    console.log(reviews);\n    console.log(response3.data);\n\n    \n    let movieHTML = <div >\n        <div className=\"row\">\n            <img src={\"https://image.tmdb.org/t/p/w300\"+movie.poster_path} />\n            <div className=\"main\">\n            <h4>{movie.title}</h4>\n            <h5>{movie.release_date}</h5>\n            <div>Runtime: {movie.runtime} mins</div>\n            <div>Genre: {movie.genres.map(genre => <p>{genre.name}</p>)}</div>\n            <div><a href={movie.homepage} target=\"_blank\">Check out the website for {movie.title}</a></div>\n            <p>{movie.overview}</p>\n            <div>Production provided by: {movie.production_companies.map(company => <p>{company.name}</p>)}</div>\n            <div>Produced in the following countries: {movie.production_countries.map(country => <p>{country.name}</p>)}</div>\n            </div>\n        </div>\n        <button onClick={() => {\n            if(this.props.balance-19.99>0){\n            this.postDatabase(\"transactions\",{\n                \"title\": movie.title,\n                \"date\": new Date().toUTCString(),\n                \"image\": \"https://image.tmdb.org/t/p/w200\"+movie.poster_path,\n                \"price\": 19.99,\n                \"userId\": this.props.userId\n                });\n            this.postDatabase(\"accounts\",{\n                \"id\": this.props.userId,\n                \"balance\": this.props.balance-19.99,\n                \"email\": this.props.user.email,\n                \"password\": this.props.user.password,\n                \"name\": this.props.user.name,\n                \"address\": this.props.user.address\n\n            });\n            console.log(this.props.balance-19.99);\n            this.setState({purchase:<p>Congrats on your purchase!</p>});\n        } else {\n                this.setState({purchase:<p>You dont have the neccessary funds</p>});\n            }\n        }}>Buy the movie for $19.99</button>\n        <div>{this.state.purchase}</div>\n        <LeaveReview bttonText=\"Leave a review\" filling={false} userId={this.props.userId} reviewId={null} movieId={this.props.id} rating={\"\"} desc={\"\"}/>\n        </div>;\n\n    let reviewsHTML = reviews.map(review => <div className=\"comments\" id={review.id}>\n        {console.log(users.filter(user => user.id===review.userId))}\n        <p>{users.filter(user => user.id===review.userId)[0].name}</p>\n        <p>{review.rating}</p>\n        <p>{review.date}</p>\n        <p>{review.description}</p>\n        {(users.filter(user => user.id===review.userId)[0].id === this.props.userId) ? <div>\n            \n            <LeaveReview bttonText=\"Edit your post\" filling={true} userId={this.props.userId} reviewId={review.id} movieId={this.props.id} rating={review.rating} desc={review.description}/>\n            <button onClick={() => {this.deleteApi(\"reviews\",review.id);document.getElementById(review.id).style.display=\"none\";}}>Delete your post</button>\n        </div>\n        : <div></div>}\n        </div>); \n      this.setState({\n        movieHTML: movieHTML, reviewHTML:reviewsHTML\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentDidMount() {\n      this.callApi();\n}\n  \n\nasync postDatabase(term,object) {\n    try {\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/'+term,object);\n      \n      console.log(response.data);\n      console.log(response);\n      \n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n \n  async deleteApi(term,id) {\n    console.log(\"This is running\",id);\n    try {\n      //const response = await axios.delete('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/'+term+'/'+id);\n      const response = await axios.delete('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/'+term+'/'+id);\n      \n      console.log(response.data);\n      console.log(response);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  \n\n\n  render() {\n    return (\n      <div className=\"movie\">\n            <div>{this.state.movieHTML}</div>\n            <h1>Check out what our others users have said</h1>\n            <div>{this.state.reviewHTML}</div>\n      </div>\n      \n    )\n  }\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"nav-bar\">\n        <Link to=\"/\">Search</Link> <br></br>\n        <Link to=\"/Profile\">Profile</Link> <br></br>\n        <Link to=\"/Movie\">Your last viewed Movie</Link>\n    </div>\n  );\n}\n\nexport default Navbar;","import React, { Component } from 'react'\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: \"\",\n      resultsHTML:'',\n      movies:[]\n\n         \n    }\n    {/* make all the mehods that will be utilized*/}\n    this.makeSearch = this.makeSearch.bind(this);\n    this.takeTerm = this.takeTerm.bind(this);\n  }\n  async callApi() {\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_KEY}`);\n      \n      console.log(response.data);\n    let elements = response.data.results.map(movie => <Link to=\"/Movie\" onClick={() => this.props.capture(movie.id)} >\n    <div style={{background: `url(\"https://image.tmdb.org/t/p/w200${movie.poster_path}\") no-repeat`}}><div className=\"cell\"><h4>{movie.title}</h4><h5>{movie.release_date}</h5><p>{movie.overview}</p></div></div>\n    </Link>);\n      this.setState({\n        resultsHTML: elements\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentDidMount() {\n      this.callApi();\n}\n  \n\nasync postDatabase(term,object) {\n    try {\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/'+term,object);\n      \n      console.log(response.data);\n      console.log(response);\n      \n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  makeSearch(event){\n    event.preventDefault();\n    \n    \n    this.callApi();\n    \n  }\n  \n  takeTerm(event){\n    this.setState({searchTerm: event.target.value});\n  }\n \n  \n\n\n  render() {\n    return (\n      <div className=\"main\">\n            <h1>Check out this awesome selection of movies</h1>\n            <div className=\"grid\">{this.state.resultsHTML}</div>\n      </div>\n      \n    )\n  }\n}","import {Link} from \"react-router-dom\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nexport default class SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          accounts: [],\n          password:'',\n          error:'',\n          email:''\n        }\n\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.signInHandler = this.signInHandler.bind(this);\n    }\n\n    componentDidMount() {\n        {/* call the api on page load */}\n        this.callApi();\n    }\n    async callApi() {\n        try {\n            const response = await axios.get('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/accounts');\n            //console.log(response.data);\n            {/* store api data in state */}\n            this.setState({accounts:response.data});\n        } catch (e) {\n        console.log(e);\n        }\n    }\n    \n    signInHandler = (event) => {\n        event.preventDefault();\n        // auth.signInWithEmailAndPassword(email, password).catch(error => {\n        // setError(\"Error signing in with password and email!\");\n        //   console.error(\"Error signing in with password and email\", error);\n        // });\n        let arrayIndex =this.state.accounts.findIndex(user => user.email===this.state.email&&user.password===this.state.password);\n        if(arrayIndex!=-1){\n            console.log(this.state.accounts[arrayIndex]);\n            this.props.Allowed(this.state.accounts[arrayIndex]);\n        } else{\n            this.setState({error: <div>Sorry, no login was found</div>});\n        }\n\n\n      };\n      onChangeHandler = (event) => {\n          //const {name, value} = event.currentTarget;\n        \n          if(event.target.name === 'userPassword'){\n            this.setState({password:event.target.value});\n          } else if(event.target.name === 'email'){\n            this.setState({email:event.target.value});\n          }\n      };\n\n      render() {\n        return (\n            <div className=\"main\">\n              <h1>Sign In</h1>\n              <div >\n                {this.state.error}\n                <form>\n                  <label>\n                    Email:\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"email\"\n                    onChange = {this.onChangeHandler}\n                  />\n                  <label>\n                    Password:\n                  </label>\n                  <input\n                    type=\"password\"\n                    name=\"userPassword\"\n                    placeholder=\"Password\"\n                    onChange = {this.onChangeHandler}\n                  />\n                  <button onClick = {this.signInHandler}>\n                    Sign in\n                  </button>\n                </form>\n                 <Link to=\"/SignUp\">Don't have an account? Sign up here\n                  </Link>\n              </div>\n            </div>\n          );\n      }\n  \n};\n","import {Link} from \"react-router-dom\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nexport default class SignUpPage  extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            accounts: [],\n            name:'',\n            password:'',\n            error:'',\n            email:'',\n            address:'',\n          }\n\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.createUserHandler = this.createUserHandler.bind(this);\n  }\n  \n\n  createUserHandler = (event) => {\n    event.preventDefault();\n    \n    let user = {\n        \"email\": this.state.email,\n        \"password\": this.state.password,\n        \"address\": this.state.address,\n        \"name\": this.state.name,\n        \"balance\":10000\n    };\n    \n    this.postApi(user);\n    this.setState({message:<p>Congrats, your profile was created successfully</p>});\n  };\n\n  onChangeHandler = (event) => {\n    //const { name, value } = event.currentTarget;\n\n    if(event.target.name === 'name') {\n        this.setState({name:event.target.value});\n    }\n    else if(event.target.name === 'userPassword'){\n      this.setState({password:event.target.value});\n    } else if(event.target.name === 'email'){\n      this.setState({email:event.target.value});\n    } else if(event.target.name === 'address'){\n      this.setState({address:event.target.value});\n    }\n  };\n\n  async postApi(object) {\n    try {\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/accounts',object);\n      \n      console.log(response.data);\n      console.log(response);\n      \n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n \n  render() {\n    return (\n        <div className=\"main\">\n          <h1>Sign Up</h1>\n          <div>\n            {this.state.message}\n            <form>\n            <label>\n                    Name:\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"name\"\n                    onChange = {this.onChangeHandler}\n                  />\n                  <label>\n                    Password:\n                  </label>\n                  <input\n                    type=\"password\"\n                    name=\"userPassword\"\n                    placeholder=\"Password\"\n                    onChange = {this.onChangeHandler}\n                  />\n                  <label>\n                    Email:\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"email\"\n                    onChange = {this.onChangeHandler}\n                  />\n                  <label>\n                    Address:\n                  </label>\n                  <input\n                    type=\"address\"\n                    name=\"address\"\n                    placeholder=\"address\"\n                    onChange = {this.onChangeHandler}\n                  />\n              <button onClick={this.createUserHandler}>\n                Sign up\n              </button>\n            </form>\n        \n            <Link to=\"/\">Already have an account? Sign in here</Link>\n          </div>\n        </div>\n      );\n\n  }\n  \n};\n","import React, { Component } from 'react';\nimport axios from 'axios';\nexport default class Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFillingOutForm: false,\n            movies: [],\n            name: this.props.userName,\n            password: this.props.userPassword,\n            error:'',\n            email: this.props.userEmail,\n            address: this.props.userAddress,\n            balance: this.props.userBalance,\n            occured: false,\n            movieHTML:['']\n          }\n\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.createUserHandler = this.createUserHandler.bind(this);\n        this.switchEdit = this.switchEdit.bind(this);\n  }\n  componentDidMount(){\n      this.callApi();\n  }\n\n  componentDidUpdate(){\n    //console.log(document.getElementById('rating').value,document.getElementById('description').value);\n    if(!this.state.occured){\n        document.getElementById('newname').value=this.state.name;\n        document.getElementById('newuserPassword').value=this.state.password;\n        document.getElementById('newemail').value=this.state.email;\n        document.getElementById('newaddress').value=this.state.address;\n        document.getElementById('newbalance').value=this.state.balance;\n        this.setState({occured:true});\n    }\n    \n  }\n\n  async callApi() {\n    try {\n        const response = await axios.get('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/transactions');\n        //console.log(response.data);\n        {/* store api data in state */}\n        let data = response.data.filter(movie => movie.userId === this.props.userId);\n        let elements = data.map(movie => <img src={movie.image}/>);\n        this.setState({movies:response.data,movieHTML:elements});\n    } catch (e) {\n    console.log(e);\n    }\n}\n  \n\n  createUserHandler = (event) => {\n    event.preventDefault();\n    \n    let user = {\n        \"id\":this.props.userId,\n        \"email\": this.state.email,\n        \"password\": this.state.password,\n        \"address\": this.state.address,\n        \"name\": this.state.name,\n        \"balance\":this.state.balance\n    };\n    \n    this.postApi(user);\n    this.setState(prevState => ({message:<p>Congrats, your profile was updated successfully</p>, isFillingOutForm: !prevState.isFillingOutForm}));\n   \n  };\n\n  onChangeHandler = (event) => {\n    //const { name, value } = event.currentTarget;\n\n    if(event.target.name === 'newname') {\n        this.setState({name:event.target.value});\n    }\n    else if(event.target.name === 'newuserPassword'){\n      this.setState({password:event.target.value});\n    } else if(event.target.name === 'newemail'){\n      this.setState({email:event.target.value});\n    } else if(event.target.name === 'newaddress'){\n      this.setState({address:event.target.value});\n    } else if(event.target.name === 'newbalance'){\n        this.setState({balance:event.target.value});\n      }\n  };\n\n  async postApi(object) {\n    try {\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/accounts',object);\n      \n      console.log(response.data);\n      console.log(response);\n      \n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  switchEdit() {\n    {/*acts a trigger between form and button*/}\n    this.setState(prevState => ({\n        isFillingOutForm: !prevState.isFillingOutForm\n    }));\n    \n  }\n  \n\n  \n  \n  render() {\n    return (\n        <div className=\"Movie\">\n            \n            <div>\n                {this.state.message}\n                <form>\n                <label>\n                        Name:\n                    </label>\n                    <input\n                        type=\"text\"\n                        id=\"newname\"\n                        name=\"newname\"\n                        placeholder=\"name\"\n                        onChange = {this.onChangeHandler}\n                    />\n                    <label>\n                        Password:\n                    </label>\n                    <input\n                        type=\"password\"\n                        id=\"newuserPassword\"\n                        name=\"newuserPassword\"\n                        placeholder=\"Password\"\n                        onChange = {this.onChangeHandler}\n                    />\n                    <label>\n                        Email:\n                    </label>\n                    <input\n                        type=\"email\"\n                        id=\"newemail\"\n                        name=\"newemail\"\n                        placeholder=\"email\"\n                        onChange = {this.onChangeHandler}\n                    />\n                    <label>\n                        Address:\n                    </label>\n                    <input\n                        type=\"address\"\n                        id=\"newaddress\"\n                        name=\"newaddress\"\n                        placeholder=\"address\"\n                        onChange = {this.onChangeHandler}\n                    />\n                    <label>\n                        Balance:\n                    </label>\n                    <input\n                        type=\"number\"\n                        id=\"newbalance\"\n                        name=\"newbalance\"\n                        onChange = {this.onChangeHandler}\n                    />\n                <button onClick={this.createUserHandler}>\n                    Update\n                </button>\n                </form>\n                </div>\n        <h1>Here are the movies you have purchased</h1>\n    <div>{this.state.movieHTML}</div>\n            \n        </div>\n      \n    )\n  }\n}","import React, {Component} from 'react';\nimport Movie from './components/Movie';\nimport {\n  BrowserRouter,\n  Route\n} from \"react-router-dom\";\nimport './App.scss';\nimport Navbar from './components/Navbar';\nimport Search from './components/Search';\nimport SignIn from './components/SignIn';\nimport SignUp from './components/SignUp';\nimport Profile from './components/Profile';\nexport default class App extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        signedIn: false,\n        movieId:0,\n        user:{},\n      }\n      this.signingIn = this.signingIn.bind(this);\n      this.chooseMovie = this.chooseMovie.bind(this);\n}\n\nsigningIn(id){\n  {/* update the ymbol in state */}\n  this.setState({signedIn: true,user:id});\n  //console.log(this.state.user);\n}\nchooseMovie(movieID){\n  this.setState({movieId: movieID});\n}\nrender(){\n  return (\n    <div>\n      {this.state.signedIn ?\n            <BrowserRouter>\n                <Navbar />\n                <Route exact strict path=\"/\" render={() => <div><Search capture={this.chooseMovie}/></div>} />\n                <Route path=\"/Profile\" render={() => <div><Profile userId={this.state.user.id} userName={this.state.user.name} userEmail={this.state.user.email} userAddress={this.state.user.address} userPassword={this.state.user.password} userBalance={this.state.user.balance}/></div>} />\n                <Route path=\"/Movie\" render={() => <div><Movie id={this.state.movieId} userId={this.state.user.id} balance={this.state.user.balance} user={this.state.user}/></div>} />\n            </BrowserRouter>\n            \n        :\n            <BrowserRouter>\n                <Route exact strict path=\"/\" render={() => <div><SignIn Allowed={this.signingIn}/></div>} />\n                <Route path=\"/SignUp\" render={() => <div><SignUp/></div>} />\n            </BrowserRouter>\n        }\n      <div>\n        <h4>Information provided by</h4>\n        <img alt=\"themoviedb\" width=\"300px\" src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_long_1-8ba2ac31f354005783fab473602c34c3f4fd207150182061e425d366e4f34596.svg\"/>\n      </div>\n    </div>\n  );\n}\n  \n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}