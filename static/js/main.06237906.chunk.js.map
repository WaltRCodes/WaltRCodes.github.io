{"version":3,"sources":["components/LeaveReview.js","components/Movie.js","components/Navbar.js","components/Search.js","components/SignIn.js","components/SignUp.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["LeaveReview","props","state","isFillingOutForm","rating","description","desc","occured","handleClick","bind","submitForm","takeRating","takeDescription","this","document","getElementById","value","setState","event","parseFloat","target","prevState","object","axios","post","response","console","log","data","preventDefault","review","reviewId","Date","toUTCString","userId","movieId","postApi","onSubmit","type","onChange","id","placeholder","onClick","bttonText","Component","Movie","searchTerm","movieHTML","reviewHTML","users","purchase","get","process","response2","response3","response4","movie","reviews","filter","genres","genre","name","length","Math","round","window","innerWidth","toString","className","style","background","backdrop_path","width","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundSize","gridArea","title","release_date","substring","runtime","src","poster_path","Array","fill","overview","href","homepage","balance","postDatabase","user","email","password","address","alert","filling","map","to","getFilter","gen","production_companies","company","production_countries","country","reviewsHTML","date","deleteApi","display","callApi","term","delete","Navbar","Search","resultsHTML","movies","makeSearch","takeTerm","results","result","genre_ids","findIndex","element","elements","capture","userName","filterName","SignIn","signInHandler","arrayIndex","accounts","Allowed","error","onChangeHandler","SignUpPage","createUserHandler","message","Profile","userPassword","userEmail","userAddress","userBalance","switchEdit","callUserApi","image","price","App","signedIn","signingIn","chooseMovie","genreFilter","movieID","newFilter","newFilterName","exact","strict","path","render","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.06237906.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nexport default class LeaveReview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isFillingOutForm: false,\r\n          rating:this.props.rating,\r\n          description:this.props.desc,\r\n          occured:false\r\n\r\n        }\r\n        {/*binds the function to the class*/}\r\n        this.handleClick = this.handleClick.bind(this);\r\n        //put this:event.preventDefault(); in the new form submitting function\r\n        this.submitForm = this.submitForm.bind(this);\r\n        this.takeRating = this.takeRating.bind(this);\r\n        this.takeDescription = this.takeDescription.bind(this);\r\n  }\r\n  componentDidUpdate(){\r\n    //console.log(document.getElementById('rating').value,document.getElementById('description').value);\r\n    if(this.state.isFillingOutForm&&!this.state.occured){\r\n        document.getElementById('rating').value=this.props.rating;\r\n        document.getElementById('desc').value=this.props.desc;\r\n        this.setState({occured:true});\r\n    }\r\n    \r\n  }\r\n\r\n  takeRating(event){\r\n    {/* update the ymbol in state */}\r\n    this.setState({rating: parseFloat(event.target.value)});\r\n  }\r\n\r\n  takeDescription(event){\r\n    this.setState({description: event.target.value});\r\n  }\r\n\r\n  handleClick() {\r\n    {/*acts a trigger between form and button*/}\r\n    this.setState(prevState => ({\r\n        isFillingOutForm: !prevState.isFillingOutForm\r\n    }));\r\n    \r\n  }\r\n  async postApi(object) {\r\n    try {\r\n      //const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/ingredients',object);\r\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/reviews',object);\r\n      console.log(response.data);\r\n      console.log(response);\r\n      \r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  submitForm(event){\r\n    event.preventDefault();\r\n    {/*submit form and creates comment*/}\r\n    let review = {\r\n        \"id\": this.props.reviewId,\r\n        \"description\": this.state.description,\r\n        \"date\": new Date().toUTCString(),\r\n        \"rating\": this.state.rating,\r\n        \"userId\": this.props.userId,\r\n        \"movieId\": this.props.movieId\r\n    };\r\n    this.postApi(review);\r\n    this.setState(prevState => ({\r\n        isFillingOutForm: !prevState.isFillingOutForm\r\n    }));\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n        this.state.isFillingOutForm ?\r\n        <div>\r\n            <form onSubmit={this.submitForm}>\r\n                <label>\r\n                    Rating:\r\n                    <input type=\"number\" onChange={this.takeRating} id=\"rating\" placeholder=\"0.0\"/>\r\n                    <br />\r\n                </label>\r\n                <label>\r\n                    Comment:\r\n                    <input type=\"text\" onChange={this.takeDescription} id=\"desc\" placeholder=\"Comment\"/>\r\n                    <br />\r\n                </label>\r\n                <label>\r\n                    <input type=\"submit\" value=\"Submit\"/>\r\n                </label>\r\n                \r\n            </form>\r\n        </div>\r\n      :\r\n        <div>\r\n            <button onClick={this.handleClick}>{this.props.bttonText}</button>\r\n        </div>\r\n      \r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport LeaveReview from './LeaveReview';\r\nimport {Link} from \"react-router-dom\";\r\nexport default class Movie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchTerm: \"\",\r\n      movieHTML:'',\r\n      reviewHTML:'',\r\n      users:[],\r\n      purchase:''\r\n         \r\n    }\r\n   \r\n  }\r\n  async callApi() {\r\n    try {\r\n      const response = await axios.get(`https://api.themoviedb.org/3/movie/${this.props.id}?api_key=${process.env.REACT_APP_KEY}&language=en-US`);\r\n      const response2 = await axios.get(`https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/reviews`);\r\n      const response3 = await axios.get(`https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/accounts`);\r\n      const response4 = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_KEY}&language=en-US`);\r\n      \r\n      \r\n    let movie = response.data;\r\n    let users = response3.data;\r\n    let reviews = response2.data.filter(review => review.movieId === movie.id);\r\n    let genres = response4.data[\"genres\"];\r\n    console.log(genres.filter(genre=>genre.name===\"Action\")[0]);\r\n    let rating = 0;\r\n      for(let review of reviews){\r\n        rating+=review.rating;\r\n      }\r\n    \r\n    console.log(rating, reviews.length);\r\n    console.log(movie);\r\n      console.log((Math.round(window.innerWidth/100)*100).toString());\r\n    \r\n    let movieHTML = <div className=\"container\" >\r\n        <div style={{background: `url(\"https://image.tmdb.org/t/p/w500${movie.backdrop_path}\")`, width: \"100%\", backgroundAttachment: \"fixed\",  backgroundPosition: \"center\",  backgroundRepeat: \"no-repeat\",  backgroundSize: \"cover\", gridArea:\"fade\"}}>\r\n          <div className=\"header\" >\r\n            <h1>{movie.title}</h1>\r\n            <h5>({movie.release_date.substring(0, 4)}) {movie.runtime} mins</h5>\r\n          </div>\r\n\r\n        </div>\r\n        \r\n            <div className=\"poster\"> <img id=\"post\" src={\"https://image.tmdb.org/t/p/w400\"+movie.poster_path} /> </div>\r\n            \r\n            <div className=\"info\">\r\n              \r\n              \r\n              <div className=\"description\">{rating===0||reviews.length===0 ? <p>no reviews yet</p>:<p>{new Array(rating/reviews.length).fill(<span>&#9733;</span>)} - {reviews.length} ratings</p>}<p>{movie.overview}</p></div>\r\n              <div className=\"title\"><a href={movie.homepage} target=\"_blank\">Check out the movie website to learn more</a></div>\r\n              \r\n              <div className=\"buy\">\r\n            <button onClick={() => {\r\n                if(this.props.balance-19.99>0){\r\n                this.postDatabase(\"transactions\",{\r\n                    \"title\": movie.title,\r\n                    \"date\": new Date().toUTCString(),\r\n                    \"image\": \"https://image.tmdb.org/t/p/w200\"+movie.poster_path,\r\n                    \"price\": 19.99,\r\n                    \"userId\": this.props.userId,\r\n                    \"movieId\":this.props.id\r\n                    });\r\n                this.postDatabase(\"accounts\",{\r\n                    \"id\": this.props.userId,\r\n                    \"balance\": this.props.balance-19.99,\r\n                    \"email\": this.props.user.email,\r\n                    \"password\": this.props.user.password,\r\n                    \"name\": this.props.user.name,\r\n                    \"address\": this.props.user.address\r\n                });\r\n                console.log(this.props.balance-19.99);\r\n                this.setState({purchase:<p>Congrats on your purchase!</p>});\r\n                alert(\"Congrats on your purchase!\");\r\n            } else {\r\n                    this.setState({purchase:<p>You dont have the neccessary funds</p>});\r\n                    alert(\"You dont have the neccessary funds or are not logged in\");\r\n                }\r\n            }}>Buy the movie for $19.99</button>\r\n            <button onClick={() => {\r\n                if(this.props.balance-9.99>0){\r\n                this.postDatabase(\"transactions\",{\r\n                    \"title\": movie.title,\r\n                    \"date\": new Date().toUTCString(),\r\n                    \"image\": \"https://image.tmdb.org/t/p/w200\"+movie.poster_path,\r\n                    \"price\": 9.99,\r\n                    \"userId\": this.props.userId,\r\n                    \"movieId\":this.props.id\r\n                    });\r\n                this.postDatabase(\"accounts\",{\r\n                    \"id\": this.props.userId,\r\n                    \"balance\": this.props.balance-9.99,\r\n                    \"email\": this.props.user.email,\r\n                    \"password\": this.props.user.password,\r\n                    \"name\": this.props.user.name,\r\n                    \"address\": this.props.user.address\r\n                });\r\n                console.log(this.props.balance-9.99);\r\n                this.setState({purchase:<p>Congrats on your purchase! You have 30 days to watch this movie</p>});\r\n                alert(\"Congrats on your purchase! You have 30 days to watch this movie.\");\r\n            } else {\r\n                    this.setState({purchase:<p>You dont have the neccessary funds</p>});\r\n                    alert(\"You dont have the neccessary funds or are not logged in\");\r\n                }\r\n            }}>Rent the movie for $9.99</button>\r\n            {this.state.purchase}\r\n        </div>\r\n        <div className=\"post\">\r\n          <LeaveReview bttonText=\"Leave a review\" filling={false} userId={this.props.userId} reviewId={null} movieId={this.props.id} rating={\"\"} desc={\"\"}/>\r\n        </div>\r\n        <div className=\"multiples genre\" ><ul><li className=\"column-head\" >GENRE </li>{movie.genres.map(genre => <Link to=\"/\" onClick={() => this.props.getFilter(genres.filter(gen=>gen.name===genre.name)[0].id,genres.filter(gen=>gen.name===genre.name)[0].name)} ><li>{genre.name}</li></Link>)}</ul></div>\r\n              <div className=\"multiples production\" ><ul> <li  className=\"column-head\" >PRODUCED BY</li>{movie.production_companies.map(company => <li>{company.name}</li>)}</ul></div>\r\n              <div className=\"multiples countries\" ><ul><li  className=\"column-head\" >PRODUCED IN</li>{movie.production_countries.map(country => <li>{country.name}</li>)}</ul></div>\r\n        </div>\r\n        \r\n        <h3 className=\"review\">Reviews</h3></div>;\r\n\r\n    let reviewsHTML = reviews.map(review => <div className=\"comments\" id={review.id}>\r\n        {console.log(users.filter(user => user.id===review.userId))}\r\n        <div>\r\n          <p>{users.filter(user => user.id===review.userId)[0].name}</p>\r\n          <div>{new Array(review.rating).fill(<span>&#9733;</span>)}</div>\r\n          <p>{review.date.substring(0,16)}</p>\r\n          <p>{review.description}</p>\r\n        </div>\r\n        \r\n        \r\n        {(users.filter(user => user.id===review.userId)[0].id === this.props.userId) ? <div>\r\n            \r\n            <LeaveReview bttonText=\"Edit your post\" filling={true} userId={this.props.userId} reviewId={review.id} movieId={this.props.id} rating={review.rating} desc={review.description}/>\r\n            <button onClick={() => {this.deleteApi(\"reviews\",review.id);document.getElementById(review.id).style.display=\"none\";}}>Delete your post</button>\r\n        </div>\r\n        : <div></div>}\r\n        </div>); \r\n      this.setState({\r\n        movieHTML: movieHTML, reviewHTML:reviewsHTML\r\n      })\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.callApi();\r\n}\r\n  \r\n\r\nasync postDatabase(term,object) {\r\n    try {\r\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/'+term,object);\r\n      \r\n      console.log(response.data);\r\n      console.log(response);\r\n      \r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n \r\n  async deleteApi(term,id) {\r\n    console.log(\"This is running\",id);\r\n    try {\r\n      //const response = await axios.delete('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/'+term+'/'+id);\r\n      const response = await axios.delete('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/'+term+'/'+id);\r\n      \r\n      console.log(response.data);\r\n      console.log(response);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"movie\">\r\n            {this.state.movieHTML}\r\n            \r\n            <div>{this.state.reviewHTML}</div>\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n      <div className=\"nav-bar\">\r\n        <div className=\"space\"></div>\r\n        <Link to=\"/Movie\">Previously Viewed</Link>\r\n        <Link to=\"/Profile\">Profile</Link> <br></br>\r\n        <Link to=\"/\">Home</Link> <br></br>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchTerm: \"\",\r\n      resultsHTML:'',\r\n      movies:[],\r\n\r\n         \r\n    }\r\n    {/* make all the mehods that will be utilized*/}\r\n    this.makeSearch = this.makeSearch.bind(this);\r\n    this.takeTerm = this.takeTerm.bind(this);\r\n  }\r\n  async callApi() {\r\n    try {\r\n      const response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_KEY}`);\r\n      \r\n      \r\n      console.log(response.data);\r\n      console.log(this.props.filter);\r\n      if(this.props.filter!=null){\r\n        response.data.results = response.data.results.filter(result => result.genre_ids.findIndex((element) => element === this.props.filter)!=-1);\r\n      }\r\n    let elements = response.data.results.map(movie => <Link to=\"/Movie\" onClick={() => this.props.capture(movie.id)} >\r\n    <div style={{background: `url(\"https://image.tmdb.org/t/p/w200${movie.poster_path}\") no-repeat`}}><div className=\"cell\"><h5>{movie.release_date}</h5><p>{movie.overview}</p></div></div>\r\n    </Link>);\r\n      this.setState({\r\n        resultsHTML: elements\r\n      })\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.callApi();\r\n}\r\n  \r\n\r\nasync postDatabase(term,object) {\r\n    try {\r\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v2/'+term,object);\r\n      \r\n      console.log(response.data);\r\n      console.log(response);\r\n      \r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  makeSearch(event){\r\n    event.preventDefault();\r\n    \r\n    \r\n    this.callApi();\r\n    \r\n  }\r\n  \r\n  takeTerm(event){\r\n    this.setState({searchTerm: event.target.value});\r\n  }\r\n \r\n  \r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"general\">\r\n            <h1>{this.props.userName}, check out this awesome selection of movies</h1>\r\n            <div className=\"filter\">{this.props.filterName==='' ? <p>no filter</p>:<p>filtered by Genre: {this.props.filterName} <Link to=\"/\" onClick={() => {this.props.getFilter(null,'');this.callApi();}} >Reset Filter</Link></p>}</div>\r\n            <div className=\"grid\">{this.state.resultsHTML}</div>\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}","import {Link} from \"react-router-dom\";\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          accounts: [],\r\n          password:'',\r\n          error:'',\r\n          email:''\r\n        }\r\n\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.signInHandler = this.signInHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        {/* call the api on page load */}\r\n        this.callApi();\r\n    }\r\n    async callApi() {\r\n        try {\r\n            const response = await axios.get('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/accounts');\r\n            //console.log(response.data);\r\n            {/* store api data in state */}\r\n            this.setState({accounts:response.data});\r\n        } catch (e) {\r\n        console.log(e);\r\n        }\r\n    }\r\n    \r\n    signInHandler = (event) => {\r\n        event.preventDefault();\r\n        // auth.signInWithEmailAndPassword(email, password).catch(error => {\r\n        // setError(\"Error signing in with password and email!\");\r\n        //   console.error(\"Error signing in with password and email\", error);\r\n        // });\r\n        let arrayIndex =this.state.accounts.findIndex(user => user.email===this.state.email&&user.password===this.state.password);\r\n        if(arrayIndex!=-1){\r\n            console.log(this.state.accounts[arrayIndex]);\r\n            this.props.Allowed(this.state.accounts[arrayIndex]);\r\n        } else{\r\n            this.setState({error: <div>Sorry, no login was found</div>});\r\n        }\r\n\r\n\r\n      };\r\n      onChangeHandler = (event) => {\r\n          //const {name, value} = event.currentTarget;\r\n        \r\n          if(event.target.name === 'userPassword'){\r\n            this.setState({password:event.target.value});\r\n          } else if(event.target.name === 'email'){\r\n            this.setState({email:event.target.value});\r\n          }\r\n      };\r\n\r\n      render() {\r\n        return (\r\n            <div className=\"main\">\r\n              <h1>Sign In</h1>\r\n              <div >\r\n                {this.state.error}\r\n                <form>\r\n                  <label>\r\n                    Email:\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"email\"\r\n                    onChange = {this.onChangeHandler}\r\n                  />\r\n                  <label>\r\n                    Password:\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"userPassword\"\r\n                    placeholder=\"Password\"\r\n                    onChange = {this.onChangeHandler}\r\n                  />\r\n                  <button onClick = {this.signInHandler}>\r\n                    Sign in\r\n                  </button>\r\n                </form>\r\n                 <Link to=\"/SignUp\">Don't have an account? Sign up here\r\n                  </Link>\r\n              </div>\r\n            </div>\r\n          );\r\n      }\r\n  \r\n};\r\n","import {Link} from \"react-router-dom\";\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class SignUpPage  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            accounts: [],\r\n            name:'',\r\n            password:'',\r\n            error:'',\r\n            email:'',\r\n            address:'',\r\n          }\r\n\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.createUserHandler = this.createUserHandler.bind(this);\r\n  }\r\n  \r\n\r\n  createUserHandler = (event) => {\r\n    event.preventDefault();\r\n    \r\n    let user = {\r\n        \"email\": this.state.email,\r\n        \"password\": this.state.password,\r\n        \"address\": this.state.address,\r\n        \"name\": this.state.name,\r\n        \"balance\":10000\r\n    };\r\n    \r\n    this.postApi(user);\r\n    this.setState({message:<p>Congrats, your profile was created successfully <Link to=\"/SignIn\">Click here to Sign In</Link></p>});\r\n  };\r\n\r\n  onChangeHandler = (event) => {\r\n    //const { name, value } = event.currentTarget;\r\n\r\n    if(event.target.name === 'name') {\r\n        this.setState({name:event.target.value});\r\n    }\r\n    else if(event.target.name === 'userPassword'){\r\n      this.setState({password:event.target.value});\r\n    } else if(event.target.name === 'email'){\r\n      this.setState({email:event.target.value});\r\n    } else if(event.target.name === 'address'){\r\n      this.setState({address:event.target.value});\r\n    }\r\n  };\r\n\r\n  async postApi(object) {\r\n    try {\r\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/accounts',object);\r\n      \r\n      console.log(response.data);\r\n      console.log(response);\r\n      \r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n \r\n  render() {\r\n    return (\r\n        <div className=\"main\">\r\n          <h1>Sign Up</h1>\r\n          <div>\r\n            {this.state.message}\r\n            <form>\r\n            <label>\r\n                    Name:\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"name\"\r\n                    onChange = {this.onChangeHandler}\r\n                  />\r\n                  <label>\r\n                    Email:\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"email\"\r\n                    onChange = {this.onChangeHandler}\r\n                  />\r\n                  <label>\r\n                    Password:\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"userPassword\"\r\n                    placeholder=\"Password\"\r\n                    onChange = {this.onChangeHandler}\r\n                  />\r\n                  <label>\r\n                    Address:\r\n                  </label>\r\n                  <input\r\n                    type=\"address\"\r\n                    name=\"address\"\r\n                    placeholder=\"address\"\r\n                    onChange = {this.onChangeHandler}\r\n                  />\r\n              <button onClick={this.createUserHandler}>\r\n                Sign up\r\n              </button>\r\n            </form>\r\n        \r\n            <Link to=\"/\">Already have an account? Sign in here</Link>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n  }\r\n  \r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFillingOutForm: false,\r\n            movies: [],\r\n            name: this.props.userName,\r\n            password: this.props.userPassword,\r\n            error:'',\r\n            email: this.props.userEmail,\r\n            address: this.props.userAddress,\r\n            balance: this.props.userBalance,\r\n            occured: false,\r\n            movieHTML:['']\r\n          }\r\n\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.createUserHandler = this.createUserHandler.bind(this);\r\n        this.switchEdit = this.switchEdit.bind(this);\r\n  }\r\n  componentDidMount(){\r\n      this.callApi();\r\n      this.callUserApi();\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    //console.log(document.getElementById('rating').value,document.getElementById('description').value);\r\n    if(!this.state.occured){\r\n        document.getElementById('newname').value=this.state.name;\r\n        document.getElementById('newuserPassword').value=this.state.password;\r\n        document.getElementById('newemail').value=this.state.email;\r\n        document.getElementById('newaddress').value=this.state.address;\r\n        //document.getElementById('newbalance').value=this.state.balance;\r\n        this.setState({occured:true});\r\n    }\r\n    \r\n  }\r\n\r\n  async callApi() {\r\n    try {\r\n        const response = await axios.get('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/transactions');\r\n        //console.log(response.data);\r\n        {/* store api data in state */}\r\n        let data = response.data.filter(movie => movie.userId === this.props.userId);\r\n    let elements = data.map(movie => <Link to=\"/Movie\" onClick={() => this.props.capture(movie.movieId)} ><img src={movie.image}/><p>{movie.price>10 ? 'Bought': 'Rented'} on {movie.date.substring(0, 17)} for ${movie.price}</p></Link>);\r\n        this.setState({movies:response.data,movieHTML:elements});\r\n    } catch (e) {\r\n    console.log(e);\r\n    }\r\n}\r\n\r\nasync callUserApi() {\r\n  try {\r\n      const response = await axios.get('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/accounts/'+this.props.userId);\r\n      //console.log(response.data);\r\n      {/* store api data in state */}\r\n      let data = response.data;\r\n      console.log(response.data);\r\n      this.setState({\r\n        name: data.name,\r\n        password: data.password,\r\n        email: data.email,\r\n        address: data.address,\r\n        balance: data.balance,\r\n        occured:false\r\n      });\r\n  } catch (e) {\r\n  console.log(e);\r\n  }\r\n}\r\n  \r\n\r\n  createUserHandler = (event) => {\r\n    event.preventDefault();\r\n    \r\n    let user = {\r\n        \"id\":this.props.userId,\r\n        \"email\": this.state.email,\r\n        \"password\": this.state.password,\r\n        \"address\": this.state.address,\r\n        \"name\": this.state.name,\r\n        \"balance\":this.state.balance\r\n    };\r\n    \r\n    this.postApi(user);\r\n    this.setState(prevState => ({message:<p>Congrats, your profile was updated successfully.</p>, isFillingOutForm: !prevState.isFillingOutForm}));\r\n   \r\n  };\r\n\r\n  onChangeHandler = (event) => {\r\n    //const { name, value } = event.currentTarget;\r\n\r\n    if(event.target.name === 'newname') {\r\n        this.setState({name:event.target.value});\r\n    }\r\n    else if(event.target.name === 'newuserPassword'){\r\n      this.setState({password:event.target.value});\r\n    } else if(event.target.name === 'newemail'){\r\n      this.setState({email:event.target.value});\r\n    } else if(event.target.name === 'newaddress'){\r\n      this.setState({address:event.target.value});\r\n    } else if(event.target.name === 'newbalance'){\r\n        this.setState({balance:event.target.value});\r\n      }\r\n  };\r\n\r\n  async postApi(object) {\r\n    try {\r\n      const response = await axios.post('https://cors-anywhere.herokuapp.com/https://nameless-dawn-18115.herokuapp.com/walter_api/v3/accounts',object);\r\n      \r\n      console.log(response.data);\r\n      console.log(response);\r\n      \r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  switchEdit() {\r\n    {/*acts a trigger between form and button*/}\r\n    this.setState(prevState => ({\r\n        isFillingOutForm: !prevState.isFillingOutForm\r\n    }));\r\n    \r\n  }\r\n  \r\n\r\n  \r\n  \r\n  render() {\r\n    return (\r\n        <div className=\"spacing\">\r\n            <h3>{this.props.userName}, view and edit your profile info here:</h3>\r\n            <div className=\"spacing\">\r\n                {this.state.message}\r\n                <form  className=\"spacing profile\">\r\n                <label>\r\n                        Name:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"newname\"\r\n                        name=\"newname\"\r\n                        placeholder=\"name\"\r\n                        onChange = {this.onChangeHandler}\r\n                    />\r\n                    <label>\r\n                        Password:\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"newuserPassword\"\r\n                        name=\"newuserPassword\"\r\n                        placeholder=\"Password\"\r\n                        onChange = {this.onChangeHandler}\r\n                    />\r\n                    <label>\r\n                        Email:\r\n                    </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"newemail\"\r\n                        name=\"newemail\"\r\n                        placeholder=\"email\"\r\n                        onChange = {this.onChangeHandler}\r\n                    />\r\n                    <label>\r\n                        Address:\r\n                    </label>\r\n                    <input\r\n                        type=\"address\"\r\n                        id=\"newaddress\"\r\n                        name=\"newaddress\"\r\n                        placeholder=\"address\"\r\n                        onChange = {this.onChangeHandler}\r\n                    />\r\n                    \r\n                    <button onClick={this.createUserHandler}>\r\n                        Update\r\n                    </button> <br />\r\n                    <label>\r\n                        Balance: ${this.state.balance}\r\n                    </label>\r\n                </form>\r\n                </div>\r\n        <h4>Here are the movies you have purchased</h4>\r\n    <div  className=\"spacing\">{this.state.movieHTML}</div>\r\n            \r\n        </div>\r\n      \r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport Movie from './components/Movie';\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './App.scss';\r\nimport Navbar from './components/Navbar';\r\nimport Search from './components/Search';\r\nimport SignIn from './components/SignIn';\r\nimport SignUp from './components/SignUp';\r\nimport Profile from './components/Profile';\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        signedIn: false,\r\n        movieId:0,\r\n        user:{},\r\n        filter:null,\r\n        filterName:'',\r\n      }\r\n      this.signingIn = this.signingIn.bind(this);\r\n      this.chooseMovie = this.chooseMovie.bind(this);\r\n      this.genreFilter = this.genreFilter.bind(this);\r\n}\r\n\r\nsigningIn(id){\r\n  {/* update the ymbol in state */}\r\n  this.setState({signedIn: true,user:id});\r\n  //console.log(this.state.user);\r\n}\r\nchooseMovie(movieID){\r\n  this.setState({movieId: movieID});\r\n}\r\ngenreFilter(newFilter,newFilterName){\r\n  this.setState({filter: newFilter,filterName:newFilterName});\r\n}\r\nrender(){\r\n  return (\r\n    <div className=\"alternative-grid\">\r\n      {this.state.signedIn ?\r\n            <BrowserRouter>\r\n                <div className=\"status\">Logged in as {this.state.user.name}</div>\r\n                <Navbar userName={this.state.user.name} />\r\n                <Route exact strict path=\"/\" render={() => <Search getFilter={this.genreFilter} filter={this.state.filter} filterName={this.state.filterName} capture={this.chooseMovie} userName={this.state.user.name}/>} />\r\n                <Route path=\"/SignIn\" render={() => <Search getFilter={this.genreFilter} filter={this.state.filter} filterName={this.state.filterName} capture={this.chooseMovie} userName={this.state.user.name}/>} />\r\n                <Route path=\"/Profile\" render={() => <Profile capture={this.chooseMovie} userId={this.state.user.id} userName={this.state.user.name} userEmail={this.state.user.email} userAddress={this.state.user.address} userPassword={this.state.user.password} userBalance={this.state.user.balance}/>} />\r\n                <Route path=\"/Movie\" render={() => <Movie getFilter={this.genreFilter} id={this.state.movieId} userId={this.state.user.id} balance={this.state.user.balance} user={this.state.user}/>} />\r\n                <div className=\"footer\">\r\n                  <p>Information provided by TheMoviedb © 2020 Walter Rada</p>\r\n                </div>\r\n            </BrowserRouter>\r\n            \r\n        :\r\n            <BrowserRouter>\r\n                <div className=\"status\"><Link to=\"/SignIn\">Sign in</Link> or <Link to=\"/SignUp\">Sign up</Link></div>\r\n                <Navbar userName={\"Guest\"} />\r\n                <Route exact strict path=\"/\" render={() => <Search getFilter={this.genreFilter} filter={this.state.filter} filterName={this.state.filterName} capture={this.chooseMovie} userName={\"Guest\"}/>} />\r\n                <Route path=\"/Profile\" render={() => <div className=\"spacing\"><h1>Please create an account and log in.</h1></div>} />\r\n                <Route path=\"/Movie\" render={() => <Movie getFilter={this.genreFilter} id={this.state.movieId} userId={0} balance={0} user={this.state.user}/>} />\r\n                <Route exact strict path=\"/SignIn\" render={() => <SignIn Allowed={this.signingIn}/>} />\r\n                <Route path=\"/SignUp\" render={() => <SignUp/>} />\r\n            </BrowserRouter>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n  \r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}